from pathlib import Path
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.filters import Text
from aiogram import Router, F
from aiogram.types import ContentType, Voice, Audio, Message
from keyboards.for_main_menu import main_menu_kb
from keyboards.simple_keyboard import make_row_cancel

router = Router()

settings_menu = ["–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª", "–ù–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª", "–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –≤c—Ç—Ä–µ—á–∏"]
start_menu = [".docx", ".pdf"]
yon = ["–î–∞","–ù–µ—Ç"]

class Transcrib(StatesGroup):
    send_audio = State()
    choosing_format = State()
    choosing_format_file = State()
    password = State()
    password_confrim = State()



@router.message(Text(text="üéôÔ∏è –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∞—É–¥–∏–æ"))
async def action_chosen_incorrectly(message: Message, state: FSMContext):
    await message.answer(
        text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞—É–¥–∏–æ—Ñ–∞–π–ª —Å–æ–≤–µ—â–∞–Ω–∏—èüìö"
    )
    await state.set_state(Transcrib.send_audio)


@router.message(Transcrib.send_audio, F.audio)
async def action_chosen_(message: Message, state: FSMContext):
    await message.answer(
        text="–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏",
        reply_markup=make_row_cancel(settings_menu)
    )
    await state.set_state(Transcrib.choosing_format)


@router.message(Transcrib.send_audio, F.voice)
async def action_chosen(message: Message, state: FSMContext):
    await message.answer(
        text="–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏",
        reply_markup=make_row_cancel(settings_menu)
    )
    await state.set_state(Transcrib.choosing_format)


@router.message(Transcrib.choosing_format, Text(text="–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª"))
async def action_chosen1(message: Message, state: FSMContext):
    await message.answer(
        text="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞üìå",
        reply_markup=make_row_cancel(start_menu)
    )
    await state.set_state(Transcrib.choosing_format_file)


@router.message(Transcrib.choosing_format, Text(text="–ù–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª"))
async def action_chosen2(message: Message, state: FSMContext):
    await message.answer(
        text="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞üìå",
        reply_markup=make_row_cancel(start_menu)
    )
    await state.set_state(Transcrib.choosing_format_file)


@router.message(Transcrib.choosing_format, Text(text="–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –≤—Å—Ç—Ä–µ—á–∏"))
async def action_chosen3(message: Message, state: FSMContext):
    await message.answer(
        text="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞üìå",
        reply_markup=make_row_cancel(start_menu)
    )
    await state.set_state(Transcrib.choosing_format_file)


@router.message(Transcrib.choosing_format_file, Text(text=".docx"))
async def action_chosen4(message: Message, state: FSMContext):
    await message.answer(
        text="–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ªüí¨",
        reply_markup=main_menu_kb()
    )
    await state.clear()

@router.message(Transcrib.choosing_format_file, Text(text=".pdf"))
async def action_chosen5(message: Message, state: FSMContext):
    await message.answer(
        text="–ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –ø–∞—Ä–æ–ª—å?",
        reply_markup=make_row_cancel(yon)
    )
    await state.set_state(Transcrib.password)

@router.message(Transcrib.password, Text(text="–î–∞"))
async def action_chosen6(message: Message, state: FSMContext):
    await message.answer(
        text="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å",
    )
    await state.set_state(Transcrib.password_confrim)

@router.message(Transcrib.password, Text(text="–ù–µ—Ç"))
async def action_chosen7(message: Message, state: FSMContext):
    await message.answer(
        text="–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ªüí¨",
        reply_markup=main_menu_kb()
    )
    await state.clear()

@router.message(Transcrib.password_confrim)
async def action_chosen7(message: Message, state: FSMContext):
    await message.answer(
        text="–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ªüí¨",
        reply_markup=main_menu_kb()
    )
    await state.clear()


@router.message(Transcrib.send_audio)
async def action_chosen8(message: Message, state: FSMContext):
    await message.answer(
        text="‚ÄºÔ∏è –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –≤ —Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ",
    )